<template>
  <div
    :style="circleStyle"
    @click="toggleValue"
  ></div>
</template>

<script setup>
import { computed, ref, watch } from 'vue';

// 定义 props
defineProps({
  modelValue: {
    type: Boolean,
    default: false, // 是否填充颜色，支持 v-model
  },
  size: {
    type: [String, Number],
    default: 100, // 圆的直径，默认 100px
  },
  borderColor: {
    type: String,
    default: '#000', // 边框颜色，默认黑色
  },
  fillColor: {
    type: String,
    default: '#00f', // 填充颜色，默认蓝色
  },
});

// 定义 emits
const emit = defineEmits(['update:modelValue']);

// 内部响应式值，用于双向绑定
const isFilled = ref(modelValue);

// 监听外部传入的 `modelValue`，同步到内部的 `isFilled`
watch(
  () => modelValue,
  (newValue) => {
    isFilled.value = newValue;
  }
);

// 计算圆的样式
const circleStyle = computed(() => ({
  width: `${size}px`,
  height: `${size}px`,
  border: `2px solid ${borderColor}`,
  borderRadius: '50%',
  backgroundColor: isFilled.value ? fillColor : 'transparent',
  cursor: 'pointer',
}));

// 切换填充状态
const toggleValue = () => {
  isFilled.value = !isFilled.value; // 改变内部状态
  emit('update:modelValue', isFilled.value); // 通知外部更新 v-model
};
</script>

<style scoped>
/* 添加鼠标点击的动画效果 */
div {
  transition: background-color 0.3s;
}
</style>