function findAllPropertyPaths(obj, propertyName, currentPath = '') {
  const results = [];

  // 如果当前对象不是对象或数组，直接返回空数组
  if (typeof obj !== 'object' || obj === null) {
    return results;
  }

  // 遍历对象的每个键
  for (const key in obj) {
    if (obj.hasOwnProperty(key)) {
      const newPath = currentPath ? `${currentPath}.${key}` : key;

      // 如果找到目标属性，添加路径和值到结果数组
      if (key === propertyName) {
        results.push({ path: newPath, value: obj[key] });
      }

      // 如果当前值是对象或数组，递归搜索
      const childResults = findAllPropertyPaths(obj[key], propertyName, newPath);
      results.push(...childResults);
    }
  }

  // 返回所有结果
  return results;
}

const data = {
  user: {
    name: 'John',
    address: {
      city: 'New York',
      zip: '10001'
    }
  },
  orders: [
    {
      id: 1,
      total: 200
    },
    {
      id: 2,
      total: 150
    }
  ]
};

console.log(findAllPropertyPaths(data, 'id'));
/*
输出:
[
  { path: 'orders.0.id', value: 1 },
  { path: 'orders.1.id', value: 2 }
]
*/

console.log(findAllPropertyPaths(data, 'city'));
/*
输出:
[
  { path: 'user.address.city', value: 'New York' }
]
*/

console.log(findAllPropertyPaths(data, 'nonexistent'));
/*
输出:
[]
*/